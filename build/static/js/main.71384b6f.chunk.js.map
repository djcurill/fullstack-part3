{"version":3,"sources":["services/phonenumber.js","components/PhoneNumber.js","components/SearchFilter.js","components/Form.js","components/Notification.js","App.js","utils.js","index.js"],"names":["baseUrl","phoneService","getAll","axios","get","then","response","data","create","contact","post","remove","delete","id","update","put","catch","err","Error","name","PhoneNumber","person","deleteHandle","number","onClick","SearchFilter","props","onChange","handleChange","type","Form","onSubmit","addContact","htmlFor","handleName","handlePhoneNumber","SuccessNotification","message","style","background","color","borderStyle","borderRadius","padding","marginBottom","ErrorNotification","FIVE_SECONDS","App","useState","persons","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","searchField","setSearchField","successMessage","setSuccessMessage","errorMessage","setErrorMessage","deletePerson","removePerson","window","confirm","deletedContact","filter","p","useEffect","phonenumbers","concat","personsToShow","entity","subString","toLowerCase","includes","event","target","value","preventDefault","existingContact","find","updatePerson","newPerson","map","setTimeout","createdPerson","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71384b6f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (contact) => {\n  return axios.post(baseUrl, contact).then((response) => response.data);\n};\n\nconst remove = (contact) => {\n  return axios\n    .delete(`${baseUrl}/${contact.id}`)\n    .then((response) => response.data);\n};\n\nconst update = (contact) => {\n  return axios\n    .put(`${baseUrl}/${contact.id}`, contact)\n    .then((response) => response.data)\n    .catch((err) => {\n      throw new Error(`Unable to update information for: ${contact.name}`);\n    });\n};\n\nconst phoneService = { getAll, create, remove, update };\nexport default phoneService;\n","import React from 'react';\n\nexport const PhoneNumber = ({ person, deleteHandle }) => {\n  return (\n    <li>\n      {person.name} : {person.number}\n      <button onClick={() => deleteHandle(person)}>Delete</button>\n    </li>\n  );\n};\n","import React from 'react';\n\nexport const SearchFilter = (props) => {\n  return (\n    <div>\n      {'Filter Numbers by Name: '}\n      <input onChange={props.handleChange} type=\"text\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Form = (props) => {\n  return (\n    <form onSubmit={props.addContact}>\n      <div>\n        <label htmlFor=\"contact-name\">Name: </label>\n        <input id=\"contact-name\" onChange={props.handleName} />\n      </div>\n      <div>\n        <label htmlFor=\"phone-number\">Phone Number: </label>\n        <input id=\"phone-number\" onChange={props.handlePhoneNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">Add Contact</button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\n\nconst SuccessNotification = ({ message }) => {\n  if (message == null) return null;\n\n  const styleClass = {\n    background: 'lightgray',\n    color: 'green',\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  return <div style={styleClass}>{message}</div>;\n};\n\nconst ErrorNotification = ({ message }) => {\n  if (message == null) return null;\n\n  const styleClass = {\n    background: 'lightgray',\n    color: 'red',\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  return <div style={styleClass}>{message}</div>;\n};\n\nexport { SuccessNotification, ErrorNotification };\n","import React, { useEffect, useState } from 'react';\nimport { isSubstring } from './utils';\nimport phoneService from './services/phonenumber';\nimport { PhoneNumber } from './components/PhoneNumber';\nimport { SearchFilter } from './components/SearchFilter';\nimport { Form } from './components/Form';\nimport {\n  SuccessNotification,\n  ErrorNotification,\n} from './components/Notification';\n\nconst FIVE_SECONDS = 5000;\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [searchField, setSearchField] = useState('');\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewPhoneNumber = (event) => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleNewSearchField = (event) => {\n    setSearchField(event.target.value);\n  };\n\n  const addPhoneNumber = (event) => {\n    event.preventDefault();\n\n    const existingContact = persons.find((p) => p.name === newName);\n\n    if (existingContact) {\n      if (\n        window.confirm(\n          `Do you wish to update ${existingContact.name} contact info?`\n        )\n      ) {\n        const updatePerson = { ...existingContact, number: newPhoneNumber };\n\n        phoneService\n          .update(updatePerson)\n          .then((newPerson) => {\n            setPersons(\n              persons.map((p) => (p.id === newPerson.id ? newPerson : p))\n            );\n            return newPerson;\n          })\n          .then((person) => {\n            setSuccessMessage(\n              `${person.name} was successfully updated in contacts`\n            );\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, FIVE_SECONDS);\n          })\n          .catch((err) => {\n            setErrorMessage(err.message);\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, FIVE_SECONDS);\n          });\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newPhoneNumber,\n      };\n      phoneService\n        .create(newPerson)\n        .then((createdPerson) => {\n          setPersons(persons.concat(createdPerson));\n          return createdPerson;\n        })\n        .then((createdPerson) => {\n          setSuccessMessage(\n            `${createdPerson.name} was successfully added to contacts`\n          );\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, FIVE_SECONDS);\n        });\n    }\n  };\n\n  const deletePerson = (removePerson) => {\n    if (window.confirm(`Delete ${removePerson.name}?`)) {\n      phoneService.remove(removePerson).then((deletedContact) => {\n        setPersons(persons.filter((p) => p.id !== removePerson.id));\n      });\n    }\n  };\n\n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then((phonenumbers) => setPersons(persons.concat(phonenumbers)));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const personsToShow = searchField\n    ? persons.filter((person) => isSubstring(person.name, searchField))\n    : persons;\n\n  return (\n    <div>\n      <h1>Phone Book</h1>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <SearchFilter handleChange={handleNewSearchField} />\n      <h1>Add New Number</h1>\n      <Form\n        addContact={addPhoneNumber}\n        handleName={handleNewName}\n        handlePhoneNumber={handleNewPhoneNumber}\n      />\n      <h2>Phone Numbers</h2>\n      <ul>\n        {personsToShow.map((person, i) => {\n          return (\n            <PhoneNumber person={person} key={i} deleteHandle={deletePerson} />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","const isSubstring = (entity, subString) => {\n  return entity.toLowerCase().includes(subString.toLowerCase());\n};\n\nexport { isSubstring };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}